IList<IList<int>> FindMissingRanges(int[] nums, int lower, int upper)
{
    List<IList<int>> ranges = new List<IList<int>>();

    if (nums.Length == 0)
    {
        ranges.Add(new List<int> { lower, upper });
        return ranges;
    }

    if (nums.Length == 1)
    {
        if (nums[0] >= lower && nums[0] <= upper)
        {
            if (nums[0] > lower)
            {
                ranges.Add(new List<int> { lower, nums[0] - 1 });
            }

            if (nums[0] < upper)
            {
                ranges.Add(new List<int> { nums[0] + 1, upper });
            }
        }

        return ranges;
    }

    if (nums[0] >= lower && nums[0] <= upper && Math.Abs(lower - nums[0]) >= 1)
    {
        ranges.Add(new List<int> { lower, nums[0] - 1 });
    }

    for (int i = 0; i < nums.Length - 1; i++)
    {
        if (nums[i] >= lower && nums[i + 1] <= upper && nums[i + 1] - nums[i] > 1)
        {
            ranges.Add(new List<int> { nums[i] + 1, nums[i + 1] - 1 });
        }
    }

    if (nums[nums.Length - 1] >= lower && nums[nums.Length - 1] <= upper && upper - nums[nums.Length - 1] >= 1)
    {
        ranges.Add(new List<int> { nums[nums.Length - 1] + 1, upper });
    }

    return ranges;
}

var results = FindMissingRanges(new int[] { 0, 1, 3, 50, 75 }, 0, 99);
// var results = FindMissingRanges(new int[] { 0, 1, 3, 50, 75 }, -5, 99);
// var results = FindMissingRanges(new int[] { -1 }, -2, -1);
// var results = FindMissingRanges(new int[] { 1, 2 }, 0, 9);
// var results = FindMissingRanges(new int[] { 5, 8 }, 0, 9);

foreach (var arr in results)
{
    Console.Write("[");
    foreach (var item in arr)
    {
        Console.Write(item + ",");
    }
    Console.WriteLine("]");
}

